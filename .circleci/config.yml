version: 2

workflows:
  version: 2
  full_test:
    jobs:
    - prep-deps-npm
    - prep-build:
        requires:
        - prep-deps-npm
    - prep-docs:
        requires:
        - prep-deps-npm
    - prep-scss:
        requires:
        - prep-deps-npm
    - test-lint:
        requires:
        - prep-deps-npm
    - test-deps:
        requires:
        - prep-deps-npm
    - test-e2e-chrome:
        requires:
        - prep-deps-npm
        - prep-build
    # - test-e2e-firefox:
    #     requires:
    #     - prep-deps-npm
    #     - prep-build
    - test-unit:
        requires:
        - prep-deps-npm
    - test-integration-mascara-chrome:
        requires:
        - prep-deps-npm
        - prep-scss
    - test-integration-mascara-firefox:
        requires:
        - prep-deps-npm
        - prep-scss
    - test-integration-flat-chrome:
        requires:
        - prep-deps-npm
        - prep-scss
    - test-integration-flat-firefox:
        requires:
        - prep-deps-npm
        - prep-scss
    - all-tests-pass:
        requires:
        - test-lint
        - test-unit
        - test-e2e-chrome
        # - test-e2e-firefox
        - test-integration-mascara-chrome
        - test-integration-mascara-firefox
        - test-integration-flat-chrome
        - test-integration-flat-firefox
    - job-screens:
        requires:
        - prep-deps-npm
        - prep-build
    #           - all-tests-pass
    - job-publish-prerelease:
        requires:
        - prep-deps-npm
        - prep-build
        - job-screens
    #           - all-tests-pass
    - job-publish-release:
        filters:
          branches:
            only: master
        requires:
        - prep-deps-npm
        - prep-build
        - prep-docs
        - job-screens
    #           - all-tests-pass
    - job-publish-postrelease:
        filters:
          branches:
            only: master
        requires:
        - prep-deps-npm
        - prep-build
        - prep-docs
        - job-screens
#            - all-tests-pass

jobs:
  prep-deps-npm:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: Install npm 6 + deps via npm
        command: |
          sudo npm install -g npm@6.4.1 && npm install --no-save
    - save_cache:
        key: dependency-cache-{{ .Revision }}
        paths:
        - node_modules

  prep-build:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: build:dist
        command: NODE_ENV='production' npm run dist
    - run:
        name: build:debug
        command: find dist/ -type f -exec md5sum {} \; | sort -k 2
    - save_cache:
        key: build-cache-{{ .Revision }}
        paths:
        - dist
        - builds

  prep-docs:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: build:dist
        command: npm run doc
    - save_cache:
        key: docs-cache-{{ .Revision }}
        paths:
        - docs/jsdoc

  prep-scss:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: Get Scss Cache key
        # this allows us to checksum against a whole directory
        command: find ui/app/css -type f -exec md5sum {} \; | sort -k 2 > scss_checksum
    - run:
        name: Build for integration tests
        command: npm run test:integration:build
    - save_cache:
        key: scss-cache-{{ checksum "scss_checksum" }}
        paths:
        - ui/app/css/output

  test-lint:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: Test
        command: npm run lint

  test-deps:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: Test
        command: sudo npm install -g npm@6.4.1 && npm audit

  test-e2e-chrome:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - restore_cache:
        key: build-cache-{{ .Revision }}
    - run: #STABLE
        name: Install Chromedriver latest version
        command: |
          sudo apt-get update
          sudo apt-get install lsb-release libappindicator3-1
          curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome.deb
          sudo sed -i 's|HERE/chrome"|HERE/chrome" --no-sandbox|g' /opt/google/chrome/google-chrome
          rm google-chrome.deb
    - run:
        name: test:e2e:chrome
        command: npm run test:e2e:chrome
    - store_artifacts:
        path: test-artifacts
        destination: test-artifacts

  test-e2e-firefox:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-firefox-{{ .Revision }}
    - run:
        name: Install firefox
        command: ./.circleci/scripts/firefox-install
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - restore_cache:
        key: build-cache-{{ .Revision }}
    - run:
        name: test:e2e:firefox
        command: npm run test:e2e:firefox
    - store_artifacts:
        path: test-artifacts
        destination: test-artifacts

  test-e2e-beta-chrome:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - restore_cache:
        key: build-cache-{{ .Revision }}
    - run:
        name: test:e2e:chrome:beta
        command: npm run test:e2e:chrome:beta
    - store_artifacts:
        path: test-artifacts
        destination: test-artifacts

  test-e2e-beta-firefox:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-firefox-{{ .Revision }}
    - run:
        name: Install firefox
        command: ./.circleci/scripts/firefox-install
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - restore_cache:
        key: build-cache-{{ .Revision }}
    - run:
        name: test:e2e:firefox:beta
        command: npm run test:e2e:firefox:beta
    - store_artifacts:
        path: test-artifacts
        destination: test-artifacts

  job-screens:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - restore_cache:
        key: build-cache-{{ .Revision }}
    - run:
        name: Test
        command: npm run test:screens
    - save_cache:
        key: job-screens-{{ .Revision }}
        paths:
        - test-artifacts

  job-publish-prerelease:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - restore_cache:
        key: build-cache-{{ .Revision }}
    - restore_cache:
        key: job-screens-{{ .Revision }}
    - store_artifacts:
        path: dist/mascara
        destination: builds/mascara
    - store_artifacts:
        path: dist/sourcemaps
        destination: builds/sourcemaps
    - store_artifacts:
        path: builds
        destination: builds
    - store_artifacts:
        path: test-artifacts
        destination: test-artifacts
    - run:
        name: build:announce
        command: ./development/metamaskbot-build-announce.js

  job-publish-release:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - restore_cache:
        key: build-cache-{{ .Revision }}
    - run:
        name: build:release
        command: node ./development/publish-release.js

  job-publish-postrelease:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - restore_cache:
        key: build-cache-{{ .Revision }}
    - restore_cache:
        key: docs-cache-{{ .Revision }}
    - restore_cache:
        key: job-screens-{{ .Revision }}
    - run:
        name: sentry sourcemaps upload
        command: npm run sentry:publish
  #        - run:
  #            name: github gh-pages docs publish
  #            command: >
  #              git config user.name metamaskbot
  #              git config user.email admin@metamask.io
  #              gh-pages -d docs/jsdocs

  test-unit:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: test:coverage
        command: npm run test:coverage

  test-integration-flat-firefox:
    environment:
      browsers: '["Firefox"]'
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-firefox-{{ .Revision }}
    - run:
        name: Install firefox
        command: ./.circleci/scripts/firefox-install
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: Get Scss Cache key
        # this allows us to checksum against a whole directory
        command: find ui/app/css -type f -exec md5sum {} \; | sort -k 2 > scss_checksum
    - restore_cache:
        key: scss-cache-{{ checksum "scss_checksum" }}
    - run:
        name: test:integration:flat
        command: npm run test:flat

  test-integration-flat-chrome:
    environment:
      browsers: '["Chrome"]'
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: Get Scss Cache key
        # this allows us to checksum against a whole directory
        command: find ui/app/css -type f -exec md5sum {} \; | sort -k 2 > scss_checksum
    - restore_cache:
        key: scss-cache-{{ checksum "scss_checksum" }}
    - run:
        name: test:integration:flat
        command: npm run test:flat

  test-integration-mascara-firefox:
    environment:
      browsers: '["Firefox"]'
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-firefox-{{ .Revision }}
    - run:
        name: Install firefox
        command: ./.circleci/scripts/firefox-install
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: Get Scss Cache key
        # this allows us to checksum against a whole directory
        command: find ui/app/css -type f -exec md5sum {} \; | sort -k 2 > scss_checksum
    - restore_cache:
        key: scss-cache-{{ checksum "scss_checksum" }}
    - run:
        name: test:integration:mascara
        command: npm run test:mascara

  test-integration-mascara-chrome:
    environment:
      browsers: '["Chrome"]'
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Revision }}
    - run:
        name: Get Scss Cache key
        # this allows us to checksum against a whole directory
        command: find ui/app/css -type f -exec md5sum {} \; | sort -k 2 > scss_checksum
    - restore_cache:
        key: scss-cache-{{ checksum "scss_checksum" }}
    - run:
        name: test:integration:mascara
        command: npm run test:mascara

  all-tests-pass:
    docker:
    - image: circleci/node:8.12.0-browsers
    steps:
    - run:
        name: All Tests Passed
        command: echo 'weew - everything passed!'